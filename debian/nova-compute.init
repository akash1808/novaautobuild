#! /bin/sh
### BEGIN INIT INFO
# Provides:          nova-compute
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: nova-compute
# Description:       nova-compute
### END INIT INFO


set -e

DAEMON=/usr/bin/nova-compute
DAEMON_ARGS="--flagfile=/etc/nova/nova.conf"
PIDFILE=/var/run/nova/nova-compute.pid

ENABLED=true

if test -f /etc/default/nova-compute; then
  . /etc/default/nova-compute
fi

mkdir -p /var/run/nova
chown nova:nogroup /var/run/nova

uid="$(getent passwd nova | cut -f3 -d:)"
gid="$(getent passwd nova | cut -f4 -d:)"
DAEMON_ARGS="${DAEMON_ARGS} --uid $uid --gid $gid --pidfile $PIDFILE"

. /lib/lsb/init-functions

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
export TMPDIR=/var/lib/nova/tmp

case "$1" in
  start)
    test "$ENABLED" = "true" || exit 0
    log_daemon_msg "Starting nova compute" "nova-compute"
    cd /var/run
    if $DAEMON $DAEMON_ARGS start; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
    ;;
  stop)
    test "$ENABLED" = "true" || exit 0
    log_daemon_msg "Stopping nova compute" "nova-compute"
    cd /var/run
    if $DAEMON $DAEMON_ARGS stop; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
    ;;
  restart|force-reload)
    test "$ENABLED" = "true" || exit 1
    cd /var/run
    if $DAEMON $DAEMON_ARGS restart; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
    ;;
  status)
    test "$ENABLED" = "true" || exit 0
    status_of_proc -p $PIDFILE $DAEMON nova-compute && exit 0 || exit $?
    ;;
  *)
    log_action_msg "Usage: /etc/init.d/nova-compute {start|stop|restart|force-reload|status}"
    exit 1
    ;;
esac

exit 0
